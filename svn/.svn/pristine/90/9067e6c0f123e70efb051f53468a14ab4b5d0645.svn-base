/**
 * 故事详情
 * 
 * @author huoyujia
 * @date 2019-08-27
 */

let app = getApp();
let baseUrl = require("../../utils/base.js");
import Api from '/../../utils/config/Api/story.js';
import WxParse from '../../wxParse/wxParse.js'
import util from '../../utils/tools/util.js';
let uncodeUtf16 = util.uncodeUtf16 // emojy 转字符
let alert = require('../../utils/tools/alert.js');
let alertModal = alert.alertModal;
let alertModal1 = alert.alertModal1;
let showLoading = alert.showLoading;
Page({

  /**
   * 页面的初始数据
   */
  data: {
    //故事id
    id: '',
    //官方全机型适配方法
    navigationStyle: '',
    statusBarStyle: '',
    navigationBarStyle: '',
    menuStyle: '',
    //适配刘海头
    fixedTop: getApp().data.fixedTop + 42,
    //请求到的数据结构体
    data: {},
    //预览图片的list
    imglist: [],
    //来源类型
    shareType: '0',
    //媒介，用户返回故事列表第几页信息，用于回显数据不重新开始请求第一页
    page: null,
    //作者昵称
    editor: "",
    //作者签名
    signature: "",
    //0查看详情，1编辑
    editType: 0,
    //弹出动画
    animationPlus: {},
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    let id = options.id;
    //故事id
    this.data.id = options.id;
    //故事来源type(0.点击分享进来，1.直接点详情，2.我的主页)
    this.data.shareType = options.type;
    //传来的故事在列表页哪个页，用于传回回显，本页没用
    this.data.page = options.page;
    wx.setStorageSync('page', options.page)
    if (options.edit != null && options.edit != undefined) {
      this.data.editType = options.edit;
    }
    if (options.userId != null && options.userId != undefined) {
      app.data.shareId = options.userId;
      app.data.sourceBindingType = 'MEMBER'
    }
    this.setData({
      navigationStyle: app.data.navigationStyle,
      statusBarStyle: app.data.statusBarStyle,
      navigationBarStyle: app.data.navigationBarStyle,
      menuStyle: app.data.menuStyle,
    })
    if (this.data.shareType == '0') {
      app.userLogin().then(res => {
        this.getDetail(id);
        this.checkOffline(id);
      });
    } else {
      this.getDetail(id);
    }
  },

  //获取故事详情
  getDetail(id) {
    let that = this;
    showLoading();
    let _parms = {
      storyId: id,
      shopId: wx.getStorageSync("shopId"),
      type: 0
    }
    Api.searchOneStoryForC(_parms).then((res) => {
      if (res.data.status == '0000') {
        if (res.data.data != null) {
          that.data.imglist.push(res.data.data.contentBanner)
          if (res.data.data.editorImg == null || res.data.data.editorImg == "") {
            res.data.data.editorImg = "../../img/LOGO.png"
          }
          let signature = "";
          if (res.data.data.signature != null && res.data.data.signature != undefined) {
            signature = uncodeUtf16(res.data.data.signature)
          }
          res.data.data.title = uncodeUtf16(res.data.data.title)
          res.data.data.contentDetail = uncodeUtf16(res.data.data.contentDetail)
          
          console.log()
          if (that.data.shareType == "0") {
            app.data.contUserId = res.data.data.userId
          }
          that.setData({
            data: res.data.data,
            editor: uncodeUtf16(res.data.data.editor),
            signature: signature,
          })
          let article = res.data.data.contentDetail;
          console.log(article)

          // 解析html
          WxParse.wxParse('article', 'html', article, that, 5);
        }
        wx.hideLoading();
      } else {
        wx.hideLoading();
        alertModal(res.data.msg)
      }
    }).catch((res) => {
      wx.hideLoading();
      alertModal("请求服务失败")
    })
  },

  //图片预览
  previewImage: function(e) {
    let that = this;
    let current = e.target.dataset.src;
    wx.previewImage({
      current: current,
      urls: that.data.imglist
    })
  },

  //跳回前一页
  backPage() {
    let that = this;
    let pages = getCurrentPages(); // 当前页面
    let beforePage = pages[pages.length - 2]; // 前一个页面
    if (this.data.shareType == "0") {
      wx.switchTab({
        url: '../../pages/shopHome/shopHome',
        success: function() {
          if (beforePage != undefined) {
            beforePage.getAllStory();
          }
        }
      })
    } else if (this.data.shareType == "1") {
      wx.switchTab({
        url: '../../pages/shopHome/shopHome',
        success: function() {
          if (beforePage != undefined) {
            beforePage.detailLike(that.data.page);
          }
        }
      })
    } else if (this.data.shareType == "2") {
      wx.navigateBack({
        detal: 1,
        success: function() {
          if (beforePage != undefined) {
            beforePage.userStory();
          }
        }
      })
    }
  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function(res) {
    let that = this;
    let shopId = wx.getStorageSync("shopId")
    if (res.from === 'button') {
      // 来自页面内转发按钮
      console.log(res.target)
    }
    let _parms = {
      storyId: that.data.id,
    }
    Api.updateShareNumber(_parms).then((res) => {
      
    }).catch((res) => {
      alertModal("请求服务失败")
    })
    return {
      title: that.data.data.title,
      imageUrl: that.data.data.storyImg,
      path: '/pages/storyDetails/storyDetails?id=' + that.data.id + '&type=0' + '&shopId=' + shopId + "&userId=" + app.data.userId
    }
  },

  //点赞
  likeFave(e) {
    let that = this;
    let is = e.currentTarget.dataset.is;
    app.accredit().then((res) => {
        let _parms = {
          storyId: that.data.id,
        }
        if (is == 0) {
          Api.thumbUpForC(_parms).then((res) => {
            if (res.data.status == "0000") {
              alertModal1("点赞成功")
              let req = "data.isThumbUp";
              let rep = "data.thumbUpNumber";
              that.setData({
                [req]: 1,
                [rep]: res.data.data.thunmbUpCount
              })
            }
          }).catch((res) => {
            alertModal("请求服务失败")
          })
        } else if (is == 1) {
          Api.deleteThumbUpForC(_parms).then((res) => {
            if (res.data.status == "0000") {
              alertModal1("取消点赞成功")
              let req = "data.isThumbUp";
              let rep = "data.thumbUpNumber";
              that.setData({
                [req]: 0,
                [rep]: res.data.data.thunmbUpCount
              })
            }
          }).catch((res) => {
            alertModal("请求服务失败")
          })
        }
    });
  },

  //关注
  attention() {
    let that = this;
    app.accredit().then((res) => {
        let _parms = {
          storyId: that.data.id,
        }
        Api.attentionForC(_parms).then((res) => {
          if (res.data.status == '0000') {
            alertModal1("关注成功")
            let req = "data.isAttention";
            that.setData({
              [req]: 1
            })
          } else {
            alertModal(res.data.msg)
          }
        }).catch((res) => {
          alertModal("请求服务失败")
        })
    });
  },

  //取消关注
  unsubscribe() {
    let that = this;
    let _parms = {
      storyId: that.data.id,
    }
    Api.deleteAttentionForC(_parms).then((res) => {
      if (res.data.status == '0000') {
        alertModal1("取消关注成功")
        let req = "data.isAttention";
        that.setData({
          [req]: 0
        })
      } else {
        alertModal(res.data.msg)
      }
    }).catch((res) => {
      alertModal("请求服务失败")
    })
  },

  //跳转其他故事页
  jumpToAnother(e) {
    let id = e.currentTarget.dataset.id;
    wx.redirectTo({
      url: '../../pages/storyDetails/storyDetails?id=' + id + "&type=2",
    })
  },

  //跳到主页
  toMyhome() {
    let that = this;
    let type = that.data.data.userType;
    if (type == 1) {
      wx.navigateTo({
        url: '../../pages/myHomePage/myHomePage?id=' + that.data.data.userId + "&storyId=" + that.data.id,
      })
    }
  },

  //跳到分类
  toClassion(e) {
    let that = this;
    let currentTab = e.currentTarget.dataset.id;
    app.globalData.currentTab = currentTab;
    wx.switchTab({
      url: '../../pages/strictShop/strictShop?source=1',
    })
  },

  /**
   * 富文本超链接
   */
  wxParseTagATap(e) {
    let href = e.currentTarget.dataset.src;
    console.log(href);
    //我们可以在这里进行一些路由处理
    //跳转的方法根据项目需求的不同自己替换，也可以加参数，
    wx.navigateTo({
      url: `../webviewPage/webviewPage?url=${href}`
    })
  },

  //屏幕滚动
  onPageScroll(e){
    this.hideSpecModal();
  },

  //隐藏底部栏动画
  hideSpecModal() {
    let animation = wx.createAnimation({
      duration: 300,
      timingFunction: "linear",
      delay: 0
    })
    let animation1 = wx.createAnimation({
      duration: 800,
      timingFunction: "linear",
      delay: 0
    })
    this.animation = animation
    animation.translateY(200).step()
    this.setData({
      animationData: animation.export(),
    })
    setTimeout(function () {
      animation1.translateY(0).step()
      this.setData({
        animationData: animation1.export(),
      })
    }.bind(this), 200)
  },

  //去购买
  toPay(e) {
    console.log('111')
    let id = e.currentTarget.dataset.id;
    wx.redirectTo({
      url: '../../pages/shopDetail/shopDetail?goodsId=' + id,
    })
  },

  //判断下线
  checkOffline(){
    let that = this;
    let _parms = {
      storyId: that.data.id,
    }
    Api.judgeStatus(_parms).then((res) => {
      if (res.data.status == '0000') {
        if (res.data.data.judgeFlag == 2){
          wx.showModal({
            title: '提示',
            content: '当前故事已下线',
            success: function (){
              wx.switchTab({
                url: '../../pages/shopHome/shopHome',
              })
            }
          })
        }
      } else {
        alertModal(res.data.msg)
      }
    }).catch((res) => {
      alertModal("请求服务失败")
    })
  },
})