/**
 * 总收入
 * 
 * @author wanghongli
 * @date 2019-09-04
 */

let app = getApp();
let baseUrl = require('../../utils/base.js')
import Api from '/../../utils/config/Api/withdrawal.js';
let alert = require('../../utils/tools/alert.js');
let alertModal = alert.alertModal;
let alertModal1 = alert.alertModal1;
let sl = alert.showLoading;
Page({
  /**
   * 页面的初始数据 
   */
  data: {
    //全机型适配
    navigationStyle: '',
    statusBarStyle: '',
    navigationBarStyle: '',
    menuStyle: '',
    fixedTop: '',
    //当前类型
    currentTab: 0,
    //流水列表
    dataList: [],
    //是否显示金额 1隐藏 0显示
    displayFlag: 1,
    //小猪电签状态  0未电签  1已电签
    isBind: 0,
    //是否绑定银行卡
    hasBankCard: false,
    //电签页面
    url: '',
    //已结算
    positionwait: 0,
    //待结算
    shellwait: 0,
    //unbalance 冻结余额
    //总金额
    wait: 0,
    //显示内容数据
    hasInform: false,
    //当前页
    currentPage: 1,
    //每页多少条
    pageSize: 10,
    //总页数
    totalPages: null,
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    let _this = this
    // 头部适配
    this.setData({
      navigationStyle: app.data.navigationStyle,
      statusBarStyle: app.data.statusBarStyle,
      navigationBarStyle: app.data.navigationBarStyle,
      menuStyle: app.data.menuStyle,
      fixedTop: app.data.fixedTop + 46,
    });
    this.getInfo();
    this.getList();

  },

  onShow() {
    this.checkCminiPrivateBankCard();

  },

  //返回页面
  backPage() {
    let that = this;
    wx.navigateBack({
      detal: 1
    })
  },

  //获取收益那几个数
  getInfo() {
    var that = this;
    let _parms = {
      allEd: 0
    }
    Api.getAccountInfo(_parms).then((res) => {
      if (res.data.data != null) {
        that.setData({
          positionwait: res.data.data.unSettAmount,
          shellwait: res.data.data.settAmount,
          wait: res.data.data.totalIncome,
        })
        wx.hideLoading();
      } else {
        wx.hideLoading();
        alertModal(res.data.msg)
      }
    }).catch((res) => {
      alertModal("请求服务失败")
    })
  },
  //隐藏或显示金额
  isDisplay() {
    let that = this;
    if (that.data.displayFlag == 1) {
      that.setData({
        displayFlag: 0,
      })
    } else {
      that.setData({
        displayFlag: 1
      })
    }
  },

  //获取列表
  getList() {
    var that = this;
 
    sl("加载中")
    let _parms = {
       //0会员 1商户
      userType:0,
      mobile: app.data.userInfo.userPhone,
      currentPage: that.data.currentPage,
      pageSize: that.data.pageSize
    }
    console.log('-_parms------', _parms)
    
    if (that.data.currentTab != 0) {
      _parms = {
        trxType: that.data.currentTab,
        //0会员 1商户
        userType: 0,
        mobile: app.data.userInfo.userPhone,
        currentPage: that.data.currentPage,
        pageSize: that.data.pageSize
      }
    }
    Api.getAccountDetail(_parms).then((res) => {
      if (res.data.data != null) {
        if (res.data.data.content.length == 0) {
          that.setData({
            hasInform: false
          })
        } else {
          that.setData({
            hasInform: true
          })
        }
        that.data.currentPage++;
        that.data.totalPages = res.data.data.totalPages
        that.setData({
          dataList: res.data.data.content
        })
        wx.hideLoading();
      } else {
        wx.hideLoading();
        // alertModal(res.data.msg)
      }
    }).catch((res) => {
      alertModal("请求服务失败")
    })
  },

  //切换tab
  handleTab(e) {
    var that = this;
    that.data.currentPage = 1;
    if (this.data.currentTab === e.target.dataset.current) {
      return false;
    } else {
      that.setData({
        currentTab: e.target.dataset.current
      })
      that.getList();
    }

  },

  //申请提现按钮
  cashOut() {
    if (!this.data.hasBankCard) {
      wx.navigateTo({
        url: '../addBankCard/addBankCard',
      })
    } else {
      if (this.data.isBind == 1) {
        wx.navigateTo({
          url: '../cashOut/cashOut',
        })
      } else if (this.data.isBind == 2) {
        wx.navigateTo({
          url: '../cashOutResult/cashOutResult',
        })
      } else {
        this.send();
        wx.navigateTo({
          url: '../cashOutNotice/cashOutNotice',
        })
      }
    }
  },

  //发送短信
  send() {
    Api.send().then((res) => {
      if (res.data.status != '0000') {
        alertModal(res.data.msg)
      }
    }).catch((res) => {
      alertModal(res.data.msg)
    })
  },

  //待结算页面
  clearing(e) {
    wx.navigateTo({
      url: '../clearing/clearing?settAmount=' + this.data.shellwait,
    })
  },

  //已结算页面
  settled(e) {
    wx.navigateTo({
      url: '../settled/settled?balance=' + this.data.positionwait,
    })
  },

  //提现记录页面
  withdrawalRecord() {
    wx.navigateTo({
      url: '../withdrawalRecord/withdrawalRecord',
    })
  },

  //分页获取更多
  getMore() {
    let that = this;
    if (that.data.currentPage > that.data.totalPages) {
      return
    }
    sl("加载中")
    let _parms = {
      currentPage: that.data.currentPage,
      pageSize: that.data.pageSize
    }
    if (that.data.currentTab != 0) {
      _parms = {
        trxType: that.data.currentTab,
        currentPage: that.data.currentPage,
        pageSize: that.data.pageSize
      }
    }
    Api.getAccountDetail(_parms).then((res) => {
      if (res.data.data != null) {
        if (res.data.data.content.length == 0) {
          alertModal1("无详情列表")
        }
        that.data.currentPage++;
        that.data.totalPages = res.data.data.totalPages
        let list = that.data.dataList.concat(res.data.data.content)
        that.setData({
          dataList: list
        })
        wx.hideLoading();
      } else {
        wx.hideLoading();
        // alertModal(res.data.msg)
      }
    }).catch((res) => {
      alertModal("请求服务失败")
    })
  },

  /**
   * 判断是否绑定电签和银行卡
   */
  checkCminiPrivateBankCard() {
    Api.checkCminiPrivateBankCard().then((res) => {
      if (res.data.status == '0000') {
        this.setData({
          hasBankCard: res.data.data.bindBankCard,
          isBind: res.data.data.signStatus
        })
      }
    }).catch((res) => {
      alertModal("请求服务失败")
    })
  },

  /** 
   * 页面上拉触底事件的处理函数 
   */
  onReachBottom: function() {
    this.getMore();
  },
})