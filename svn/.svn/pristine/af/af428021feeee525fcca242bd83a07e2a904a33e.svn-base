// pages/phoneVerification/phoneVerification.js
let baseUrl = require('../../utils/base.js')
import commonApi from '../../utils/config/Api/common.js'
let app = getApp()
Page({

  /**
   * 页面的初始数据
   */
  data: {
    codeStatus:false,
    //定时器名字
    timer: '',
    countDownNum: '60',//倒计时初始值
    wxHeight:'',
    phone: '',
    messageCode: '',
    selected: true,
    phoneCancel: false,
    codeCancel: false
  },

  // 同意协议
  selected() {
    let selected = this.data.selected; 
    selected = !selected;
    this.setData({
      selected: selected
    })
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    this.setData({
      wxHeight: wx.getSystemInfoSync().windowHeight
    })
  },
  countDown: function () {
    let that = this;
    let countDownNum = that.data.countDownNum;//获取倒计时初始值
    //如果将定时器设置在外面，那么用户就看不到countDownNum的数值动态变化，所以要把定时器存进data里面
    that.setData({
      timer: setInterval(function () {//这里把setInterval赋值给变量名为timer的变量
        //每隔一秒countDownNum就减一，实现同步
        countDownNum--;
        //然后把countDownNum存进data，好让用户知道时间在倒计着
        that.setData({
          countDownNum: countDownNum
        })
        //在倒计时还未到0时，这中间可以做其他的事情，按项目需求来
        if (countDownNum == 0) {
          //这里特别要注意，计时器是始终一直在走的，如果你的时间为0，那么就要关掉定时器！不然相当耗性能
          //因为timer是存在data里面的，所以在关掉时，也要在data里取出后再关闭
          clearInterval(that.data.timer);
          that.setData({
            codeStatus: false,
            countDownNum: '60'
          })
          //关闭定时器之后，可作其他处理codes go here
        }
      }, 1000)
    })
  },
  changeCodeStatus(){
    let myreg = /^(((13[0-9]{1})|(15[0-9]{1})|(18[0-9]{1})|(17[0-9]{1}))+\d{8})$/;
    if(!myreg.test(this.data.phone)) {
      wx.showToast({
        title: '手机号输入不正确',
        icon: 'none'
      })
      return
    }
    let that = this;
    that.setData({
      codeStatus:true
    })
    this.countDown();
    this.sendMessageCode(this.data.phone)
  },
  inputPhone(e) {
    let status = true
    if(e.detail.value == '') {
      status = false
    }
    this.setData({
      phone: e.detail.value,
      phoneCancel: status
    })
  },
  inputCode(e) {
    let status = true
    if (e.detail.value == '') {
      status = false
    }
    this.setData({
      messageCode: e.detail.value,
      codeCancel: status
    })
  },

  phoneCancel() {
    this.setData({
      phone: '',
      phoneCancel: false
    })
  },
  codeCancel() {
    this.setData({
      messageCode: '',
      codeCancel: false
    })
  },

  // 获取验证码
  sendMessageCode(phone) {
    let params = {
      telephone: phone
    }
    commonApi.sendMessageCode(params).then(res => {
      console.log("获取验证码", res)
      if (res.data.status === "0000") {
        wx.showToast({
          title: '短信验证码已发',
          icon: 'none'
        })
      } else {
        wx.showToast({
          title: res.data.msg,
          icon: 'none'
        })
      }
    })
  },
  
  // 立即绑定  校验验证码是否正确
  binding() {
    let _this = this
    let myreg = /^(((13[0-9]{1})|(15[0-9]{1})|(18[0-9]{1})|(17[0-9]{1}))+\d{8})$/;
    if (!myreg.test(this.data.phone)) {
      wx.showToast({
        title: '手机号输入不正确',
        icon: 'none'
      })
      return
    }
    if (this.data.phone === "") {
      wx.showToast({
        title: '手机不能为空',
        icon: 'none'
      })
      return
    }
    if(this.data.messageCode === "") {
      wx.showToast({
        title: '验证码不能为空',
        icon: 'none'
      })
      return
    }
    if (!this.data.selected) {
      wx.showToast({
        title: '请勾选用户服务协议',
        icon: 'none'
      })
      return
    }
    wx.showLoading({
      title: '加载中',
    })
    let params = {
      messageCode: this.data.messageCode,
      telephone: this.data.phone
    }
    commonApi.checkMessageCode(params).then(res => {
      console.log("验证结果", res)
      if (res.data.status === "0000") {
        console.log("可以绑定")
        _this.bindPhone()
      } else {
        wx.showToast({
          title: '验证码错误',
          icon: 'none'
        })
      }
    })
  },


  // 绑定手机号请求
  bindPhone() {
    let _this = this;
    let params = { mobile: _this.data.phone }
    commonApi.binding(params).then(res => {
      // 绑定是否成功
      console.log("绑定结果", res)
      if (res.data.status === "0000") {
        wx.hideLoading()
        app.userLogin()
        app.data.userPhone = true
        // wx.showToast({
        //   title: '登录成功',
        //   icon: "none",
        // })
        // wx.navigateBack({
        //   delta: 1
        // })
        var pages = getCurrentPages(); // 当前页面
        var beforePage = pages[pages.length - 2]; // 前一个页面
        // console.log("beforePage");
        // console.log(beforePage);
        wx.navigateBack({
          success: function () {
            beforePage.showToast(); // 执行前一个页面的onLoad方法
          }
        });
      } else {
        wx.hideLoading()
        wx.showToast({
          title: res.data.msg,
          icon: "none"
        })
      }
    })
    
  },

  /**
   * 跳转协议页面
   */
  goAgreementPage() {
    wx.navigateTo({
      url: '../agreement/agreement?type=2',
    })
  },
  /**
   * 返回后同意协议
   */
  agreeTo() {
    this.setData({
      selected: true
    })
  },
})