/**
 * 提现到银行卡
 * 
 * @author wanghonli
 * @date 2019-09-10
 */

const app = getApp()
let baseUrl = require('../../utils/base.js')
import Api from '/../../utils/config/Api/withdrawal.js';
import commonApi from '../../utils/config/Api/common.js';
let alert = require('../../utils/tools/alert.js');
let alertModal = alert.alertModal;
let alertModal1 = alert.alertModal1;

Page({

  /**
   * 页面的初始数据
   */
  data: {
    //全机型适配
    navigationStyle: '',
    statusBarStyle: '',
    navigationBarStyle: '',
    menuStyle: '',
    fixedTop: '',
    //手机号
    mobile: '',
    //提现金额
    cashOutNumber: '',
    //可提现金额
    placeholder: '',
    //银行卡信息
    bankCardInfo: [],
    //到账银行
    bankName: '',
    //持卡人
    cardHolder: '',
    // 是否展示支付成功
    showConfirmModal: false,
    //滤镜
    isCheck: false,
    //是否展示密码输入层
    showPayPwdInput: false,
    //输入的密码
    pwdVal: '',
    //文本框焦点
    payFocus: true,
    // 是否可以取现
    canCashOut: true,
    //规则
    ruleInfo: {
      //个人每次提现金额(min)
      merchantWithdrawalPriceTimeMin: 0,
      //个人每次提现金额(max)
      userWithdrawalPriceTimeMax: 0,
      //工猫 提现手续费率
      catPayerFee: 0,
    }
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    let _this = this
    // 头部适配
    this.setData({
      navigationStyle: app.data.navigationStyle,
      statusBarStyle: app.data.statusBarStyle,
      navigationBarStyle: app.data.navigationBarStyle,
      menuStyle: app.data.menuStyle,
      fixedTop: app.data.fixedTop + 46,
    });



  },

  onShow() {
    this.getBankCarInfo();
    this.getAllWithdrawalPrice();
    this.getWithdrawRules();
  },

  //返回页面
  backPage() {
    let that = this;
    wx.navigateBack({
      detal: 1
    })
  },

  /**
   * 获取提现规则
   */
  getWithdrawRules() {
    let that = this;
    Api.getWithdrawRules().then((res) => {
      if (res.data.status === '0000') {

        that.setData({
          ['ruleInfo.merchantWithdrawalPriceTimeMin']: res.data.data.merchantWithdrawalPriceTimeMin,
          ['ruleInfo.userWithdrawalPriceTimeMax']: res.data.data.userWithdrawalPriceTimeMax,
          ['ruleInfo.catPayerFee']: res.data.data.catPayerFee,
        })
      }
    }).catch((res) => {
      alertModal("请求服务失败")
    })
  },

  /**
   * 获取银行卡信息
   */
  getBankCarInfo() {
    var that = this;
    let _parms = {
      "tab": 1
    }

    Api.getBankCard(_parms).then((res) => {
      if (res.data.status === '0000') {
        // 判断卡号是否为空
        if (res.data.data.accountNo) {
          let str = res.data.data.accountNo;
          str = str.substring(str.length - 4);
          that.setData({
            bankName: res.data.data.bank + '(尾号' + str + ')',
            cardHolder: res.data.data.name,
            bankCardInfo: res.data.data,
          })
        }
      } else {
        alertModal1(res.data.msg)
      }
    }).catch((res) => {
      alertModal("请求服务失败")
    })
  },

  //获取全部可提现金额
  getAllWithdrawalPrice() {
    var that = this;
    Api.getAllWithdrawalPrice().then((res) => {
      if (res.data.status === '0000') {
        console.log(res.data.data);
        that.setData({
          placeholder: res.data.data
        })
      } else {
        alertModal1(res.data.msg)
      }
    }).catch((res) => {
      alertModal("请求服务失败")
    })
  },


  // 点击全部
  setAllPush: function() {
    if (this.data.placeholder == 0) {
      wx.showToast({
        title: '没有可提现金额',
        icon: 'none'
      })
      return
    }
    this.setData({
      cashOutNumber: this.data.placeholder
    })
  },

  // 输入金额
  handleInput(e) {
    console.log(e.detail.value)
    this.setData({
      // moneyOfProfit
      cashOutNumber: e.detail.value.replace(/\.{2,}/g, ".")
    })
  },

  // 切换银行
  handleBank() {
    console.log(1)
  },


  //确认提现
  showModal() {
    var that = this;
    let reg = /^(([^0][0-9]+|0)\.([0-9]{1,2})$)|^(([^0][0-9]+|0)$)|^(([1-9]+)\.([0-9]{1,2})$)|^(([1-9]+)$)/
    if (!reg.test(this.data.cashOutNumber)) {
      wx.showToast({
        title: '请输入正确的金额',
        icon: 'none'
      })
      return
    }
    // 发送请求获取页面提现信息
    let params = {
      bankCardId: that.data.bankCardInfo.bankCardId,
      withdrawalPrice: parseFloat(that.data.cashOutNumber),
      withdrawalType: 2
    }
    Api.getWithdrawalInfo(params).then(res => {
      if (res.data.status == '0000') {
        this.showInputLayer();
      } else {
        alertModal(res.data.msg);
      }
    })

  },

  //关闭蒙层
  closeModal() {
    this.setData({
      isCheck: false,
      showConfirmModal: false
    })
  },

  /**
   * 显示支付密码输入层
   */
  showInputLayer: function() {
    this.setData({
      showPayPwdInput: true,
      payFocus: true
    });
  },

  /**
   * 隐藏支付密码输入层
   */
  hidePayLayer: function() {
    var val = this.data.pwdVal;
    this.setData({
      showPayPwdInput: false,
      payFocus: false,
      pwdVal: ''
    }, function() {
      // wx.showToast({
      //   title: val,
      // })
    });
  },

  /**
   * 获取焦点
   */
  getFocus: function() {
    this.setData({
      payFocus: true
    });
  },

  /**
   * 输入密码监听
   */
  inputPwd: function(e) {
    this.setData({
      pwdVal: e.detail.value
    });
    var that = this;
    if (e.detail.value.length >= 6) {
      this.hidePayLayer();
      let params = {
        withdrawalType: 2,
        withdrawalPrice: parseFloat(that.data.cashOutNumber),
        passWord: e.detail.value
      }
      Api.cashOut(params).then(res => {
        if (res.data.status == "0000") {
          var resp = res.data
          console.log(resp)
          this.setData({
            isCheck: true,
            showConfirmModal: true
          })
        } else {
          alertModal1(res.data.msg)
        }
      })
    }
  },

  // 提现成功
  complete: function() {
    this.setData({
      isCheck: false,
      showConfirmModal: false
    })
    wx.redirectTo({
      url: '../cashOut/cashOut',
    })
  }

})