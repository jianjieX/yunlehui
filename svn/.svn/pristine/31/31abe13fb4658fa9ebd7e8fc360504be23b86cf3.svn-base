/**
 * 搜索商品
 */

// 引入全局app对象
const app = getApp();
// 引入接口api
import Api from '/../../utils/config/Api/shopMerchant.js';
// 引入toast等提示方法
let alert = require('../../utils/tools/alert.js');
let alertModal1 = alert.alertModal1;
let showLoading = alert.showLoading;
// 引入表情解码与编码方法
import tools from '../../utils/tools/util.js'
let utf16toEntities = tools.utf16toEntities // emojy转字符
let uncodeUtf16 = tools.uncodeUtf16 //字符转emojy


Page({

  data: {
    // 搜索关键词
    searchValue: '',
    // 搜索历史列表
    historyMerchantList: [],
    // 当前排序tab 0:默认状态 1:默认 2:销售升序 3:销售降序 4:价格升序 5:价格降序
    sortTab: 0,
    // 当前页码
    currentPage: 1,
    // 开卡状态
    openCardFlag: false,
    // 商户列表
    merchantList: [],
    // 经度
    longitude: '',
    // 纬度
    dimension: '',
    // 距离
    distance: ''
  },

  onShow() {
    this.getHistorySearch();
  },

  onLoad(options) {
      this.setData({
      distance: options.distance,
      longitudeUser: options.longitudeUser,
      latitudeUser: options.latitudeUser,

    })
    this.getLocation(); //查询用户与商家的距离
  },

  /**
   * 到底部加载更多
   */
  onReachBottom() {
    let currentPage = this.data.currentPage;
    currentPage++;
    this.data.currentPage = currentPage;
    console.log(this.data.inputValue)
    let params1 = {
      name: inputValue,
      tag: '',
      currentPage: this.data.currentPage,
      
      
      type: 2,
      longitude:this.data.longitudeUser,
      dimension:this.data.latitudeUser
    }
    this.getMerchantList(params1);
  },

  /**
   * 输入搜索内容
   */
  inputSearchValue(e) {

    let searchValue = e.detail.value;
    this.setData({
      searchValue
    })
    if (searchValue === '' && this.data.merchantList.length === 0) {
      this.setData({
        sortTab: 0
      })
      this.getHistorySearch();
    }

  },

  /**
   * 清空input
   */
  cancelInput() {

    this.setData({
      searchValue: ''
    })
    this.getHistorySearch();

    if (this.data.searchValue === '' && this.data.merchantList.length === 0) {
      this.setData({
        sortTab: 0
      })
      this.getHistorySearch();
    }
  },

  /**
   * 从storage取出搜索历史
   */
  getHistorySearch() {

    this.setData({
      historyMerchantList: wx.getStorageSync('historyMerchantList')
    })
  },

  /**
   * 点击搜索
   */
  searchGoods() {

    let inputValue = this.data.searchValue.trim();
    if (inputValue === '') {
      alertModal1('搜索内容不能为空')
      return
    }

    // 调用存入历史记录
    this.saveHistoryList(inputValue);

    // 请求搜索商品列表
    this.setData({
      sortTab: 1
    })
    this.data.merchantList = [];
    this.data.currentPage = 1;

    let params = {
      name: inputValue,
      tag: '',
      enablePage: true,
      pageSize: 10,
      type: 2,
      longitude:this.data.longitudeUser,
      dimension:this.data.latitudeUser
    }
    this.getMerchantList(params);
  },

  /**
   * 存入历史搜索记录
   */
  saveHistoryList(value) {

    let historyMerchantList = wx.getStorageSync('historyMerchantList') || [];
    // 如果大于15条 删除最早一条
    if (historyMerchantList.length >= 15) {
      historyMerchantList.pop()
    }
    // 循环storage是否有此记录
    for (let i = 0; i < historyMerchantList.length; i++) {
      if (historyMerchantList[i].toLowerCase() === value.toLowerCase()) {
        value = historyMerchantList[i];
        historyMerchantList.splice(i, 1);
      }
    }
    historyMerchantList.unshift(value);
    // 搜索历史存入storage
    wx.setStorageSync('historyMerchantList', historyMerchantList)
  },

  /**
   * 清除搜索记录
   */
  clearHistoryList() {

    let that = this
    wx.showModal({
      title: '删除历史搜索',
      content: '确认删除历史搜索吗?',
      showCancel: true, //是否显示取消按钮
      confirmText: "确定", 
      confirmColor: '#FABE00',
      success(res) {
        if (res.confirm) {
          wx.removeStorageSync('historyMerchantList')
          that.setData({
            historyMerchantList: []
          })
        } else if (res.cancel) {
          console.log('用户点击取消')
        }
      }
    })
  },

  /**
   * 请求商品列表
   */
  getMerchantList(params) {
    console.log('**********^^^^^^开始搜索---------');
    let that = this;
    showLoading();
    Api.getMerchant(params).then(res => {
      console.log('----------------------搜索结果---------',res)
      if (res.data.data) {
        that.setData({
          merchantList: [...that.data.merchantList, ...res.data.data.content]
        })
      }
    })
  },

  /**
   * 切换排序tab
   */
  changeSortTab(e) {

    if (this.data.searchValue === '') {
      alertModal1('搜索内容不能为空')
      return
    }
    let type = e.currentTarget.dataset.type;
    let sortTab = this.data.sortTab;
    switch (type) {
      // 点击默认排序
      case 1:
        if (sortTab === 1) {
          return
        }
        sortTab = 1
        break;
        // 点击销售排序 
      case 2:
        if (sortTab === 2) {
          sortTab = 3;
        } else {
          sortTab = 2;
        }
        break;
        // 点击价格排序
      case 3:
        if (sortTab === 4) {
          sortTab = 5;
        } else {
          sortTab = 4;
        }
        break;
    }
    // 赋值
    this.setData({
      sortTab
    })
    // 请求对应排序商品列表
    this.data.merchantList = [];
    this.data.currentPage = 1;
    this.getMerchantList();

  },

  /**
   * 点击历史搜索或热门搜索标签
   */
  clickSearchTag(e) {

    let searchValue = e.currentTarget.dataset.value;
    this.setData({
      searchValue,
      sortTab: 1
    })
    // 请求商品列表
    this.searchGoods()
  },

  /**
   * 跳转详情页
   */
  jumpDetail(e) {

    let distance = e.currentTarget.dataset.distance;
    wx.navigateTo({
      url: '../merchantDetail/merchantDetail?merchantShopId=' + e.currentTarget.dataset.id + '&latitude=' + e.currentTarget.dataset.latitude + '&longitude=' + e.currentTarget.dataset.longitude + '&distance=' + distance,
    })
  },

  /**
   * 获取经纬度
   */
  getLocation() {

    wx.getLocation({
      type: 'wgs84',
      success: (res) => {
        var latitude = res.latitude
        var longitude = res.longitude
        this.setData({
          latitude: latitude,
          longitude: longitude
        })
        this.getDistance(res.latitude, res.longitude, 39.924091, 116.403414)
      }
    })
  },

  /**
   * 根据经纬度判断距离
   */
  Rad: function (d) {
    return d * Math.PI / 180.0;
  },

  /**
   * 根据经纬度计算距离
   */
  getDistance: function (lat1, lng1, lat2, lng2) {
    // lat1用户的纬度
    // lng1用户的经度
    // lat2商家的纬度
    // lng2商家的经度
    var radLat1 = this.Rad(lat1);
    var radLat2 = this.Rad(lat2);
    var a = radLat1 - radLat2;
    var b = this.Rad(lng1) - this.Rad(lng2);
    var s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) + Math.cos(radLat1) * Math.cos(radLat2) * Math.pow(Math.sin(b / 2), 2)));
    s = s * 6378.137;
    s = Math.round(s * 10000) / 10000;
    s = s.toFixed(2) + 'km' //保留两位小数
    console.log('经纬度计算的距离:' + s)
    this.setData({
      distance: s
    })
  }
})