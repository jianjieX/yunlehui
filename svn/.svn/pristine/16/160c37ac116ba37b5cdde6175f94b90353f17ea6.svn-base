/**
 * 客服
 * 
 * @author huoyujia
 * @date 2019-08-27
 */

let app = getApp();
//输入插件
let chatInputPlugIn = require('../../components/chat-input/chat-input');
//上传
import upload from '../../utils/tools/uploadFile.js';
let uploadFile = upload.uploadFile;
//alert提示
let alert = require('../../utils/tools/alert.js');
let alertModal1 = alert.alertModal1;
let alertModal = alert.alertModal;
let sl = alert.loading;
//API
import Api from '/../../utils/config/Api/customerService.js';
import commonApi from '../../utils/config/Api/common.js';
//工具
let util = require('../../utils/tools/util.js');
// emojy 转字符
let utf16toEntities = util.utf16toEntities;
// emojy 转字符
let uncodeUtf16 = util.uncodeUtf16;

Page({

  /**
   * 页面的初始数据
   */
  data: {
    // 消息列表
    messageList: [],
    inputContent: "",
    // 滚动位置
    bottom: "",
    //商户类型
    sourceType: 0,
    //商户id
    merchantId: 0,
    //商品id
    goodsId: 0,
    //商户名字
    merchantName: "",
    //商户头像
    merchantImg: "",
    //scroll-view顶部
    scrollTop: 430,
    //当前页
    currentPage: 1,
    //每页多少条
    pageSize: 50,
    //总页数
    totalPages: 0,
    //发送状态，避免多次
    sendDisable: true,
    //跳转方式(1.商品详情跳进来，2.消息列表跳进来)
    reqType: 0,
  },

  onLoad: function(options) {

    this.init(options);

    this.getInfo();

  },

  //获取信息
  getInfo() {
    let that = this;
    that.data.currentPage = 1;
    sl("加载中")
    let _parms = {
      goodsId: that.data.goodsId,
      currentPage: that.data.currentPage,
      pageSize: that.data.pageSize,
      reqType: that.data.reqType,
      enablePage: true
    }
    Api.loadInfoForC(_parms).then((res) => {
      if (res.data.status == '0000') {
        wx.hideLoading();
        for (let i = 0; i < res.data.data.messageList.content.length; i++) {
          if (res.data.data.messageList.content[i].type == 1) {
            res.data.data.messageList.content[i].message = uncodeUtf16(res.data.data.messageList.content[i].message)
          }
        }
        if (res.data.data != null) {
          that.setData({
            merchantName: res.data.data.cminiSuppInfoRes.name,
            merchantImg: res.data.data.cminiSuppInfoRes.img,
            merchantId: res.data.data.cminiSuppInfoRes.merchantId,
            messageList: res.data.data.messageList.content,
          })
          if (that.data.reqType == 2) {
            that.setData({
              goodsName: res.data.data.cminiSuppInfoRes.goodsName,
              merchantId: res.data.data.cminiSuppInfoRes.merchantId,
              goodsPicUrl: res.data.data.cminiSuppInfoRes.goodsPicUrl,
              selectedPrice: res.data.data.cminiSuppInfoRes.selectedPrice,
            })
          }
          that.data.totalPages = res.data.data.messageList.totalPages;
          that.data.currentPage++;
          that.bottom();
        } else {
          alertModal("连接失败")
        }
      } else {
        wx.hideLoading();
      }
    }).catch((res) => {
      wx.hideLoading();
      alertModal("请求catch")
    })
  },


  //获得更多
  getMore() {
    let that = this;
    if (that.data.currentPage > that.data.totalPages) {
      alertModal1("没有更多消息了")
      return
    }
    sl("加载中")
    let _parms = {
      goodsId: that.data.goodsId,
      currentPage: that.data.currentPage,
      pageSize: that.data.pageSize,
      reqType: that.data.reqType,
      enablePage: true
    }
    Api.loadInfoForC(_parms).then((res) => {
      if (res.data.status == '0000') {
        wx.hideLoading();
        if (res.data.data != null) {
          let list = that.data.messageList;
          //修改消息列表里文字type内容的表情转码
          for (let i = 0; i < res.data.data.messageList.content.length; i++) {
            if (res.data.data.messageList.content[i].type == 1) {
              res.data.data.messageList.content[i].message = uncodeUtf16(res.data.data.messageList.content[i].message)
            }
          }
          //拼接之前的消息列表
          list = res.data.data.messageList.content.concat(list)
          that.setData({
            merchantName: res.data.data.cminiSuppInfoRes.name,
            merchantImg: res.data.data.cminiSuppInfoRes.img,
            merchantId: res.data.data.cminiSuppInfoRes.merchantId,
            messageList: list,
          })
          that.data.totalPages = res.data.data.messageList.totalPages;
          that.data.currentPage++;
        } else {
          alertModal("连接失败")
        }
      } else {
        wx.hideLoading();
        console.log(res)
      }
    }).catch((res) => {
      wx.hideLoading();
      alertModal("请求服务失败")
    })
  },

  /**
   * 初始化
   */
  init: function(options) {

    let that = this;
    let systemInfo = wx.getSystemInfoSync();
    // 插件
    chatInputPlugIn.init(this, {
      systemInfo: systemInfo,
      extraArr: [{
        picName: 'choose_picture',
        description: '照片'
      }]
    });
    // 样式
    that.setData({
      pageHeight: systemInfo.windowHeight,
    });
    that.textButton();
    that.extraButton();

    that.setData({
      goodsId: options.goodsId,
      reqType: options.reqType,
      goodsName: options.goodsName,
      merchantId: options.merchantId,
      goodsPicUrl: options.goodsPicUrl,
      selectedPrice: options.selectedPrice,
      scrollTop: app.data.windowHeight - 190
    })

  },

  //发送输入
  textButton: function() {
    chatInputPlugIn.setTextMessageListener(function(e) {
      let content = e.detail.value;
    });
  },

  /**
   * 点击+号 功能选项区
   */
  extraButton: function() {

    let that = this;
    chatInputPlugIn.clickExtraListener(function(e) {
      // 选择图片
      wx.chooseImage({
        count: 1,
        sourceType: ['album', 'camera'],
        success(res) {
          // tempFilePath可以作为img标签的src属性显示图片
          const tempFilePaths = res.tempFilePaths
          uploadFile(tempFilePaths[0], 20).then((res) => {
            that.sendPost(res, 2)
          })
        }
      })
    });
    chatInputPlugIn.setExtraButtonClickListener(function(dismiss) {
      //console.log('Extra弹窗是否消息', dismiss);
    })

  },

  /**
   * 发送消息事件
   */
  submitTo(e) {

    let that = this;
    if (this.data.sendDisable) {
      that.data.sendDisable = false;
      let inputContent = that.data.inputContent
      if (inputContent == "") {
        alertModal1("发送内容不能为空")
        return
      }
      that.sendPost(inputContent, 1)
    }

  },

  //输入框值绑定
  bindKeyInput(e) {

    let that = this;
    that.setData({
      inputContent: e.detail.value
    })

  },

  //发送接口
  sendPost(message, type) {

    let that = this;
    let _parms = {
      goodsId: that.data.goodsId,
      merchantId: that.data.merchantId,
      message: utf16toEntities(message),
      type: type,
    }
    Api.sendC(_parms).then((res) => {
      if (res.data.status == '0000') {
        if (res.data.data != null) {
          that.setData({
            inputContent: ""
          })
          that.bottom();
          this.getInfo();
        } else {
          alertModal("请求错误")
        }
      } else {
        console.log(res)
      }
      that.data.sendDisable = true;
    }).catch((res) => {
      that.data.sendDisable = true;
      alertModal("请求服务失败")
    })

  },

  //屏幕滚动到新发消息的位置
  bottom: function() {

    this.setData({
      bottom: "bottom",
    })

  },

  /** 
   * 页面上拉触底事件的处理函数 
   */
  onReachBottom: function() {
    this.getMore();
  },

  //去购买
  toPay() {
    
    let that = this;
    if (that.data.reqType == '1') {
      wx.navigateBack({
        detal: 1
      })
    } else if (that.data.reqType == '2') {
      wx.redirectTo({
        url: '../../pages/shopDetail/shopDetail?goodsId=' + that.data.goodsId,
      })
    }
  }

})