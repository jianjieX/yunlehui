/**
 * 关联商品
 * 
 * @author huoyujia
 * @date 2019-09-16
 */

let baseUrl = require("../../utils/base.js");
import Api from '/../../utils/config/Api/goods.js';
import util from '../../utils/tools/util.js';
// emojy 转字符
let uncodeUtf16 = util.uncodeUtf16;
let alert = require('../../utils/tools/alert.js');
let alertModal1 = alert.alertModal1;
let sl = alert.showLoading;

Page({
  /**
   * 页面的初始数据
   */
  data: {
    //商品列表
    goodsList: [],
    //当前第几页
    currentPage: 1,
    //总页数
    totalPages: 0,
    //选择的商品id组
    selectList: [],
    //搜索输入框值
    searchValue: '',
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    let that = this;
    let list = JSON.parse(options.list);
    this.setData({
      selectList: list
    })
    this.onGoods();
  },

  //初始化商品列表
  onGoods() {
    let that = this;
    let list = that.data.selectList;
    sl();
    let _parms = {
      currentPage: that.data.currentPage,
      pageSize: 10,
      enablePage: true,
      goodsName: that.data.searchValue
    }
    Api.getAddstoryGoods(_parms).then((res) => {
      if (res.data.status == '0000') {
        let goodsList = res.data.data.content;
        //如果选择关联商品id和列表查询商品的id相同就变已选择状态
        if (list.length != 0) {
          for (let i = 0; i < goodsList.length; i++) {
            for (let j = 0; j < list.length; j++) {
              if (goodsList[i].id == list[j].goodsId) {
                goodsList[i].selectType = "999";
              }
            }
          }
        }
        that.setData({
          goodsList: goodsList,
          currentPage: that.data.currentPage + 1,
          totalPages: res.data.data.totalPages,
        })
      } else {
        console.log(res)
      }
    }).catch((res) => {
      alertModal("请求服务失败")
    })
  },

  //获取更多 
  getMore() {
    let that = this;
    let currentPage = that.data.currentPage;
    let totalPages = that.data.totalPages;
    let list = this.data.selectList;
    if (currentPage > totalPages) {
      alertModal1("没有更多内容了")
      return;
    }
    sl();
    let _parms = {
      currentPage: that.data.currentPage,
      pageSize: 10,
      enablePage: true,
      goodsName: that.data.searchValue
    }
    Api.getAddstoryGoods(_parms).then((res) => {
      if (res.data.status == '0000') {
        let goodsList = res.data.data.content;
        //如果选择关联商品id和列表查询商品的id相同就变已选择状态
        if (list.length != 0) {
          for (let i = 0; i < goodsList.length; i++) {
            for (let j = 0; j < list.length; j++) {
              if (goodsList[i].id == list[j].goodsId) {
                goodsList[i].selectType = "999";
              }
            }
          }
        }
        goodsList = that.data.goodsList.concat(goodsList);
        that.setData({
          goodsList: goodsList,
          currentPage: that.data.currentPage + 1,
          totalPages: res.data.data.totalPages
        })
      } else {
        console.log(res)
      }
    }).catch((res) => {
      alertModal("请求服务失败")
    })
  },

  /** 
   * 页面上拉触底事件的处理函数 
   */
  onReachBottom: function() {
    this.getMore();
  },

  //选择商品
  selectGoods(e) {
    let that = this;
    let list = this.data.selectList;
    if (list.length >= 3) {
      alertModal1("最多只能选择3个商品")
      return;
    }
    let id = e.currentTarget.dataset.id;
    let index = e.currentTarget.dataset.index;
    list = list.push({
      "goodsId": id
    })
    let temp = "goodsList[" + index + "].selectType"
    this.setData({
      selectList: that.data.selectList,
      [temp]: "999"
    })
  },

  //取消选择商品
  unSelectGoods(e) {
    let that = this;
    let list = this.data.selectList;
    let id = e.currentTarget.dataset.id;
    let index = e.currentTarget.dataset.index;
    let temp = "goodsList[" + index + "].selectType"
    for (let i = 0; i < list.length; i++) {
      if (list[i].goodsId == id) {
        list.splice(i, 1);
      }
    }
    this.setData({
      selectList: list,
      [temp]: "0"
    })
  },

  //搜索输入赋值
  inputSearchValue(e) {
    this.setData({
      searchValue: e.detail.value.trim()
    })
  },

  //搜索商品
  searchGoods() {
    this.setData({
      currentPage: 1,
    })
    if (this.data.searchValue) {
      this.onGoods(this.data.selectList);
    } else {
      alert.alertModal("搜索不能为空")
      return
    }

  },

  //清除输入
  cancelInput() {
    this.setData({
      searchValue: ''
    })
  },

  //确定
  cofirm() {
    let that = this;
    let pages = getCurrentPages(); // 当前页面
    let beforePage = pages[pages.length - 2]; // 前一个页面
    wx.navigateBack({
      detal: 1,
      success: function() {
        if (beforePage != undefined) {
          beforePage.setGoodsList(that.data.selectList);
        }
      }
    })
  },
})